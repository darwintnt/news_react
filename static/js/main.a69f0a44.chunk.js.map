{"version":3,"sources":["components/modules/Header.js","components/modules/Form.js","components/modules/New.js","components/modules/Card.js","components/News.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","title","Form","categoryRef","React","createRef","changeCategory","e","preventDefault","_this","getNewsForCategory","current","value","onSubmit","this","ref","Component","New","target","src","_this$props$new","new","description","urlToImage","url","alt","onError","addDefaultSrc","href","rel","Card","news","map","noticia","modules_New","key","Promise","resolve","then","__webpack_require__","bind","News","state","response","apiNews","category","arguments","length","undefined","concat","fetch","res","json","data","setState","articles","catch","error","console","log","modules_Header","modules_Form","modules_Card","Boolean","window","location","hostname","match","ReactDOM","render","components_News","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a69f0a44.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Header = (props) => {\r\n\r\n      return(\r\n\r\n         <header className=\"uk-navbar-container uk-navbar header\" >\r\n            <div className=\"uk-navbar-center\">\r\n               <ul className=\"uk-navbar-nav uk-padding-small\">\r\n                     <h2 className=\"title\">{props.title}</h2>\r\n               </ul>\r\n            </div>\r\n         </header>\r\n\r\n\r\n      )\r\n   \r\n}\r\n\r\nHeader.propTypes = {\r\n   title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Form extends Component {\r\n\r\n\r\n   categoryRef = React.createRef();\r\n\r\n\r\n   changeCategory = (e) => {\r\n      \r\n      e.preventDefault();\r\n\r\n      this.props.getNewsForCategory(this.categoryRef.current.value);    \r\n\r\n   }\r\n\r\n\r\n   render() {\r\n\r\n      return(\r\n         <div className=\"uk-child-width-1-4@m uk-grid uk-grid-small form\">\r\n\r\n         <form onSubmit={this.changeCategory}>\r\n            <div className=\"uk-form-controls\"> \r\n               <label>Categoria</label>\r\n               <select className=\"uk-select\" ref={this.categoryRef}>\r\n                  <option value=\"\">Seleccione una categoria</option>\r\n                  <option value=\"general\">General</option>\r\n                  <option value=\"business\">Negocios</option>\r\n                  <option value=\"entertainment\">Entretenimiento</option>\r\n                  <option value=\"health\">Salud</option>\r\n                  <option value=\"science\">Ciencia</option>\r\n                  <option value=\"sports\">Deportes</option>\r\n                  <option value=\"technology\">Tecnologia</option>                       \r\n               </select>\r\n            </div>\r\n\r\n            <div>\r\n               <button className=\"uk-button uk-button-primary search-btn uk-width-1-1@m\">Buscar</button>\r\n            </div>\r\n         </form>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nForm.propTypes = {\r\n   getNewsForCategory: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Form","import React, { Component }  from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass New extends Component {\r\n\r\n   addDefaultSrc(e){\r\n      e.target.src = 'http://www.ccsa.edu.sv/assets/camaleon_cms/image-not-found-26112ee47503d45cff89e808e1d1a5f7.png';\r\n   }\r\n\r\n  \r\n   render(){\r\n      \r\n      const { title, description, urlToImage, url } = this.props.new;\r\n      \r\n      return(\r\n         <div className=\"uk-margin-bottom\">\r\n            <div className=\"uk-card uk-card-default\">\r\n               <div className=\"uk-card-media-top\">\r\n                  <img className=\"image\" src={urlToImage} alt=\"img_url\" onError={this.addDefaultSrc} />\r\n               </div>\r\n               <div className=\"uk-card-body\">\r\n                  <h3 className=\"uk-card-title\">{title}</h3>\r\n                  <p>{description}</p>\r\n               </div>\r\n               <div className=\"uk-card-footer\">\r\n                  <a href={url} className=\"uk-button uk-button-text\" target=\"_blank\" rel=\"noopener noreferrer\">Mas Informaci√≥n</a>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      )\r\n\r\n   }\r\n\r\n   \r\n   \r\n}\r\n\r\nNew.propTypes = {\r\n   new: PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      description: PropTypes.string,\r\n      urlToImage: PropTypes.string,\r\n      url: PropTypes.string.isRequired\r\n   })\r\n}\r\n\r\nexport default New","import React, { Component } from 'react';\r\nimport New from '../modules/New';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Card extends Component {\r\n\r\n   render() {\r\n\r\n      return(\r\n\r\n         <div className=\"uk-child-width-1-2@s uk-child-width-1-3@m uk-grid\">\r\n               {this.props.news.map( noticia => (\r\n                     <New \r\n                        key = {noticia.url}\r\n                        new = {noticia}\r\n                     />\r\n               ))}\r\n            \r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nCard.propTypes = {\r\n   news: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Card","import React, { Component } from 'react';\r\nimport Header from './modules/Header';\r\nimport Form from './modules/Form';\r\nimport Card from './modules/Card';\r\n// import Swal from 'sweetalert2';\r\nimport('../');\r\n\r\n\r\nclass News extends Component {\r\n\r\n   state = {\r\n      response: []\r\n   }\r\n\r\n\r\n   componentDidMount(){\r\n\r\n      this.apiNews();      \r\n\r\n   }\r\n\r\n   apiNews = (category = 'general') => {\r\n\r\n      const apiId = '572acb752c8f4be8b094ec07864aa400';\r\n\r\n      let url = `https://newsapi.org/v2/top-headlines?country=co&category=${category}&apiKey=${apiId}`;\r\n\r\n      fetch(url)\r\n         .then( res => {\r\n            return res.json();\r\n         })\r\n         .then( data => {\r\n            this.setState({\r\n               response: data.articles\r\n            })\r\n         })\r\n         .catch( error => {\r\n            console.log(error);\r\n         }) \r\n\r\n   }\r\n\r\n\r\n   render() {\r\n\r\n      return(\r\n\r\n         <div className='content'>\r\n            <Header title={'Noticias'} />\r\n\r\n            <div className=\"uk-card uk-card-default uk-width-5-6@m card\">\r\n                  <h3 className=\"subtitle uk-text-center\">Noticias por Categoria</h3>\r\n                  <Form getNewsForCategory={this.apiNews} />\r\n\r\n                  <div className=\"uk-margin\">\r\n                     <Card news={this.state.response} />\r\n                  </div>\r\n            </div>\r\n         </div>\r\n         \r\n        \r\n\r\n      )\r\n   }\r\n}\r\n\r\nexport default News","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../src/css/news.css';\nimport News from './components/News';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<News />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}